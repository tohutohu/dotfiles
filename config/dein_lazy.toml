[[plugins]]
repo = "Yggdroot/indentLine"
on_event = "VimEnter"
hook_add = """
let g:indent_guides_enable_on_vim_startup = 1
"""
if = 0

[[plugins]]
repo ="majutsushi/tagbar"
on_event = "VimEnter"

[[plugins]]
repo = "cohama/lexima.vim"
on_event = "InsertEnter"

[[plugins]]
on_event = ["InsertEnter"]
repo = "vim-scripts/fcitx.vim"
on_if = "has('unix')"
if = 0

[[plugins]]
repo = "othree/yajs.vim"
on_ft = ["javascript", "vue"]

[[plugins]]
repo = "gabrielelana/vim-markdown"
on_ft = "markdown"

[[plugins]]
repo = "wavded/vim-stylus"
on_ft = "stylus"

[[plugins]]
repo = 'lervag/vimtex'
on_ft = "tex"
hook_source = '''
let g:vimtex_fold_envs = 0
let g:vimtex_view_general_viewer = '/Applications/Skim.app/Contents/SharedSupport/displayline'
let g:vimtex_view_general_options = '-r @line @pdf @tex'
let g:vimtex_compiler_latexmk = {
      \ 'options' : [
      \   '-verbose',
      \   '-file-line-error',
      \   '-synctex=1',
      \   '-interaction=nonstopmode',
      \ ]}
let g:vimtex_compiler_progname = 'nvr'
let g:tex_conceal = ''
'''

[[plugins]]
repo = "iamcco/markdown-preview.vim"
on_ft = "markdown"

[[plugins]]
repo = "posva/vim-vue"
on_ft = 'vue'

[[plugins]]
repo = "leafgarland/typescript-vim"
on_ft = "typescript"

[[plugins]]
repo = "mattn/emmet-vim"
on_ft = ["html", "vue", "markdown", "javascript"]
hook_add = """
let g:user_emmet_settings = {'variables':{'lang' : 'ja'}}
let g:user_emmet_leader_key = '<C-l>'
"""

[[plugins]]
repo = "simeji/winresizer"
on_map = ["<C-e>"]
hook_add = """
let g:winresizer_vert_resize=5
"""

[[plugins]]
repo = "ctrlpvim/ctrlp.vim"
on_source = "vim-go"
on_map = ["<C-p>"]
on_cmd = ["GoDecls", "GoDeclsDir"]
hook_add ="""
let g:ctrlp_lazy_update = 1
let g:ctrlp_cmd = "CtrlPMixed"
let g:ctrlp_root_markers = [".gitignore"]
let g:ctrlp_clear_cache_on_exit = 1
let g:ctrlp_custom_ignore = {
\ 'dir':'node_modules\|build\|\.git\|vendor',
\}
let g:ctrlp_dotfiles = 1
"""

[[plugins]]
repo = "cespare/vim-toml"
on_ft = "toml"

[[plugins]]
repo = "zchee/deoplete-go"
on_ft = "go"
hook_post_update = """
let g:dein#plugin.build = 'make'
"""
hook_add = """
let g:deoplete#go#gocode_binary = '/User/user/.gvm/pkgsets/go1.10/global/bin/gocode'
let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
let g:deoplete#sources#go#pointer = 1
let g:deoplete#sources#go#use_cache = 1
let g:deoplete#sources#go#json_directory = '~/.cache/deoplete/go/$GOOS_$GOARCH'
"""

[[plugins]]
repo = "tyru/current-func-info.vim"
on_event = "BufReadPost"

[[plugins]]
repo = "zchee/deoplete-jedi"
on_ft = "python"

[[plugins]]
repo = "fatih/vim-go"
on_ft = "go"
hook_post_update = """
:GoInstallBinaries
"""
hook_add = """
let g:go_snippet_engine = "neosnippet"
let g:go_term_enabled = 0
let g:go_term_mode = "botright split"
let g:go_fmt_command = "goimports"
let g:go_def_mapping_enabled = 1
let g:go_metalinter_autosave = 0
let g:go_fmt_autosave = 1
let g:go_doc_keywordprg_enabled = 0
let g:go_jump_to_error = 0
let g:go_auto_type_info = 1
let g:go_auto_sameids = 1

let g:go_info_mode = 'guru'
let g:go_gocode_unimported_packages = 1

noremap <silent><Esc><Esc> :GoCoverageClear<CR>:noh<CR>
noremap <C-n> :cnext<CR>
noremap <C-m> :cprevious<CR>

let g:go_gocode_unimported_packages = 1
"""

[[plugins]]
repo = "kchmck/vim-coffee-script"
on_ft = "coffee-script"

[[plugins]]
repo = "stephpy/vim-yaml"
on_ft = "yaml"

[[plugins]]
repo = "scrooloose/nerdtree"
on_cmd = ["NERDTreeToggle", "NERDTree"]
hook_add = """
let g:NERDTreeShowHidden = 1
let g:NERDTreeShowBookmarks = 1
let g:NERDTreeShowLineNumbers = 0
let g:NERDTreeHighlightCursorline = 1
let g:NERDTreeWinSize = 24
let g:NERDTreeChDirMode = 2

" フォルダアイコンの表示をON
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
"""

[[plugins]]
on_map = "<Space>"
repo = "airblade/vim-gitgutter"

[[plugins]]
on_map = "<Space>"
repo = "cohama/agit.vim"
hook_add = """
noremap <Space>gv :Agit<CR>
"""

[[plugins]]
repo = "Lokaltog/vim-easymotion"
on_event = "BufReadPost"
hook_add = """
let g:EasyMotion_do_mapping = 0

nmap <S-f> <Plug>(easymotion-overwin-f2)
"""
if = 0

[[plugins]]
repo = "daeyun/vim-matlab"
on_ft = "matlab"

[[plugins]]
repo = "neovimhaskell/haskell-vim"
on_ft = "haskell"

[[plugins]]
repo = "adimit/prolog.vim"
on_ft = "prolog"

[[plugins]]
repo = 'rizzatti/dash.vim'
hook_add = 'nmap <silent> <Leader>d <Plug>DashSearch'

[[plugins]]
repo = 'aklt/plantuml-syntax'
on_ft = 'plantuml'

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'

[[plugins]]
repo = 'chr4/nginx.vim'
on_ft = 'nginx'

[[plugins]]
repo = 'buoto/gotests-vim'
on_ft = 'go'
