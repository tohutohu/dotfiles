[[plugins]]
if = 0
repo = "Shougo/dein.vim"

[[plugin]]
repo = "roxma/nvim-yarp"

[[plugin]]
repo = "roxma/vim-hug-neovim-rpc"

[[plugins]]
repo = "jacoborus/tender"

[[plugins]]
repo = "tpope/vim-fugitive"
hook_add = """
noremap <Space>gp :Gpush<CR>
noremap <Space>gc :Gcommit<CR>
noremap <Space>ga :write<CR>:Git! add -A<CR>
noremap <Space>gs :Gstatus<CR>
noremap <Space>gf :Gfetch<CR>
"""

[[plugins]]
repo = "itchyny/lightline.vim"
hook_add = """
let g:lightline = {
      \ 'colorscheme': 'tender',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'fugitive','po', 'filename' ] ]
      \ },
      \ 'component_function': {
      \   'fugitive': 'LightlineFugitive',
      \   'readonly': 'LightlineReadonly',
      \   'modified': 'LightlineModified',
      \   'filename': 'LightlineFilename'
      \ },
      \ 'separator': { 'left': '', 'right': '' },
      \ 'subseparator': { 'left': '', 'right': '' }
      \ }

function! LightlineModified()
  if &filetype == "help"
    return ""
  elseif &modified
    return "+"
  elseif &modifiable
    return ""
  else
    return ""
  endif
endfunction

function! LightlineReadonly()
  if &filetype == "help"
    return "help"
  elseif &readonly
    return "ro"
  else
    return ""
  endif
endfunction

function! LightlineFugitive()
  return exists('*fugitive#head') ? fugitive#head() : ''
endfunction

function! LightlineFilename()
  return ('' != LightlineReadonly() ? LightlineReadonly() . ' ' : '') .
       \ ('' != expand('%:t') ? expand('%:t') : '[No Name]') .
       \ ('' != LightlineModified() ? ' ' . LightlineModified() : '')
endfunction
"""

[[plugins]]
repo = "Yggdroot/indentLine"
hook_add = """
let g:indent_guides_enable_on_vim_startup = 1
"""

[[plugins]]
repo = "ap/vim-buftabline"


